<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- <bean class="com.hxkj.xhupubmed.core.config.SwaggerConfig"></bean> -->
	
	<context:component-scan base-package="com.cqq.leisure.*">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<property name="maxActive" value="20" />
		<property name="maxIdle" value= "200"/>
		<property name="minIdle" value="0" />
		<property name="defaultAutoCommit" value="false" />
	</bean>


	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:com/cqq/leisure/mapper/*Mapper.xml" />
		<property name="configLocation" value="classpath:mybatis/config.xml" />
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<constructor-arg index="1" value="SIMPLE" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.cqq.leisure.dao" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!--redis  缓存  -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">   
        <property name="maxIdle" value="300" />
        <property name="maxTotal" value="600" />  
        <property name="maxWaitMillis" value="1000" /> 
        <property name="testOnBorrow" value="true" />
        <!-- <property name="testOnReturn" value="${redis.testOnReturn}" /> -->
    </bean>  
      
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="127.0.0.1" p:port="6379" p:password=""  p:pool-config-ref="poolConfig"/>  
      
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory" />  
    </bean>
	
	<beans profile="production">
		<context:property-placeholder
			ignore-unresolvable="true" file-encoding="utf-8" location="classpath:jdbc.properties,classpath:redis.properties" />
	</beans>
</beans>
